version: '3.8'
name: iidi-test

services:
  # ========================
  # Gateway Service
  # ========================
  gateway:
    image: nginx:1.27.3
    restart: always
    networks:
      - gateway
      - host-loopback
    ports:
      - '127.0.0.1:8080:80'
    configs:
      - source: gateway.test.conf
        target: /etc/nginx/conf.d/default.conf

  # ========================
  # Ontario (ON) Services
  # ========================
  on-fhir-db:
    image: postgres:14.11-alpine
    networks:
      - on-fhir-db
    environment:
      POSTGRES_DB: hapi-fhir-db
      POSTGRES_USER: hapi-fhir-db
      POSTGRES_PASSWORD: local-dev-value
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U hapi-fhir-db -d hapi-fhir-db']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  on-fhir:
    image: hapiproject/hapi:latest
    networks:
      - gateway
      - on-fhir-db
    environment:
      POSTGRES_DB: hapi-fhir-db
      POSTGRES_USER: hapi-fhir-db
      POSTGRES_PASSWORD: local-dev-value
      DB_PORT: 5432
      DB_HOST: on-fhir-db
      FHIR_SERVER_ADDRESS: http://gateway:80/on/fhir
    depends_on:
      on-fhir-db:
        condition: service_healthy

  on-synthesizer: &synthesizer-service
    image: synthesizer:1.4
    restart: on-failure
    build:
      context: ./synthesizer
    networks:
      - gateway
    environment:
      NUM_RECORDS: 100
      PT: on
      FHIR_URL: http://on-fhir:8080/fhir # in this case, resolved inside the container, with container networking

  on-transfer-inbound: &transfer-inbound-service
    image: node-dev:1.0
    tty: ${DOCKER_TTY:-true}
    restart: always
    build:
      context: ./node-dev-docker-env
      dockerfile: ./Dockerfile.node-dev
    volumes:
      - ./transfer-inbound:/home/node-dev/project
      - ./transfer-inbound/.env.node-dev-docker-env-overrides:/home/node-dev/project/.env
    command: npm run dev:${DOCKER_API_COMMAND:-docker}
    networks:
      - gateway
      - host-loopback
    ports:
      - 3001:3000
      - 9231:9229
    environment:
      EXPRESS_PORT: 3000
      DEV_IS_LOCAL_ENV: True
      FHIR_URL: http://on-fhir:8080/fhir

  on-bullmq-redis: &bullmq-redis
    image: redis:7.4.1-alpine
    restart: always
    networks:
      - on-bullmq-redis
    ports:
      - 6379:6379
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD --port $$REDIS_PORT --loglevel notice"
    environment: &bullmq-env
      REDIS_PORT: 6379
      REDIS_PASSWORD: local-dev-value

  on-transfer-outbound: &transfer-outbound-service
    image: node-dev:1.0
    restart: always
    build:
      context: ./node-dev-docker-env
      dockerfile: ./Dockerfile.node-dev
    volumes:
      - ./transfer-outbound:/home/node-dev/project
      - ./transfer-outbound/.env.node-dev-docker-env-overrides:/home/node-dev/project/.env
    command: npm run dev:${DOCKER_API_COMMAND:-docker}
    networks:
      - gateway
      - on-bullmq-redis
    ports:
      - 3002:3000
    environment:
      <<: *bullmq-env
      EXPRESS_PORT: 3000
      DEV_IS_LOCAL_ENV: True
      REDIS_HOST: on-bullmq-redis
      FHIR_URL: http://on-fhir:8080/fhir # in this case, resolved inside the container, with container networking
      OWN_TRANSFER_CODE: 'ON'
      INBOUND_TRANSFER_SERIVCES_BY_TRANSFER_CODE: '{ "BC": "http://bc-transfer-inbound:3000" }' # resolved inside the container, with container networking

  # ========================
  # British Columbia (BC) Services
  # ========================
  bc-fhir-db:
    image: postgres:14.11-alpine
    networks:
      - bc-fhir-db
    environment:
      POSTGRES_DB: hapi-fhir-db
      POSTGRES_USER: hapi-fhir-db
      POSTGRES_PASSWORD: local-dev-value
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U hapi-fhir-db -d hapi-fhir-db']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  bc-fhir:
    image: hapiproject/hapi:latest
    networks:
      - gateway
      - bc-fhir-db
    environment:
      POSTGRES_DB: hapi-fhir-db
      POSTGRES_USER: hapi-fhir-db
      POSTGRES_PASSWORD: local-dev-value
      DB_PORT: 5432
      DB_HOST: bc-fhir-db
      FHIR_SERVER_ADDRESS: http://gateway:80/bc/fhir
    depends_on:
      bc-fhir-db:
        condition: service_healthy

  bc-synthesizer:
    <<: *synthesizer-service
    networks:
      - gateway
    environment:
      NUM_RECORDS: 100
      PT: bc
      FHIR_URL: http://bc-fhir:8080/fhir

  bc-transfer-inbound:
    <<: *transfer-inbound-service
    command: npm run dev
    networks:
      - gateway
      - host-loopback
    ports:
      - 3003:3000
    environment:
      FHIR_URL: http://bc-fhir:8080/fhir

  bc-bullmq-redis:
    <<: *bullmq-redis
    networks:
      - bc-bullmq-redis
    environment:
      <<: *bullmq-env
  bc-transfer-outbound:
    <<: *transfer-outbound-service
    command: npm run dev
    networks:
      - gateway
      - bc-bullmq-redis
      - host-loopback
    ports:
      - 3004:3000
    environment:
      <<: *bullmq-env
      EXPRESS_PORT: 3000
      DEV_IS_LOCAL_ENV: True
      REDIS_HOST: bc-bullmq-redis
      FHIR_URL: http://bc-fhir:8080/fhir
      OWN_TRANSFER_CODE: 'BC'
      INBOUND_TRANSFER_SERIVCES_BY_TRANSFER_CODE: '{ "ON": "http://on-transfer-inbound:3000" }' # resolved inside the container, with container networking

  # ========================
  # Test Container
  # ========================
  uj1-pt-pt:
    image: user-journey-1:0.0.2
    build:
      context: ./user-journey-tests/uj1-pt-pt/
    networks:
      - gateway
    environment:
      BC_OUTBOUND_URL: http://bc-transfer-outbound:3000
      ON_OUTBOUND_URL: http://on-transfer-outbound:3000
      BC_FHIR_URL: http://bc-fhir:8080/fhir
      ON_FHIR_URL: http://on-fhir:8080/fhir

# ========================
# Configurations
# ========================
configs:
  gateway.test.conf:
    content: |
      server {
          location /on/fhir/ {
              proxy_pass http://on-fhir:8080/fhir/;
          }
          location /bc/fhir/ {
              proxy_pass http://bc-fhir:8080/fhir/;
          }
          location /on/outbound/ {
              proxy_pass http://on-transfer-outbound:3000/;
          }
          location /bc/outbound/ {
              proxy_pass http://bc-transfer-outbound:3000/;
          }
      }

# ========================
# Networks
# ========================
networks:
  host-loopback:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: '127.0.0.1'
  gateway:
    driver: bridge
  on-fhir-db:
    driver: bridge
    internal: true
  on-bullmq-redis:
    driver: bridge
    internal: true
  bc-fhir-db:
    driver: bridge
    internal: true
  bc-bullmq-redis:
    driver: bridge
    internal: true
