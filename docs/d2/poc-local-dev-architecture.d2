vars: {
  d2-config: {
    layout-engine: elk
  }
}

title: POC Local Dev Architecture {
  shape: text
  near: top-center
  style: {
    font-size: 55
    italic: true
  }
}

api-mocks: Province API Mocks {
  style: {
    stroke-dash: 3
  }

  panorama-read-api-mock: Panorama mock (read/query operations only) {
    icon: ./icons/general/server.svg
  }

  aggregate-read-api-mock: IDPV compliant aggregate API mock {
    icon: ./icons/general/server.svg
  }
}

acg-services: Access Control Gateway Services {
  style: {
    stroke-dash: 3
  }

  access-rule-governance-ui: Governance UI {
    icon: ./icons/general/react.svg
  }
  access-rule-governance-ui -> access-rule-store: Get rules

  access-rule-store: Access Control Rule Store {
    shape: cylinder

    record-rules: Record field-level rules {
      shape: stored_data
    }

    aggregate-rules: Aggregate field-level rules {
      shape: stored_data
    }
  }
  access-rule-store -> access-rule-governance-ui: Manage\nrules

  gql-api: Rule-applying\nGraphQL API {
    icon: ./icons/graphql/logo-pink.svg
    icon.near: bottom-right

    record-resolvers: Resolvers apply record rules\nto record data {
      shape: step
    }

    aggregate-resolvers: Resolvers apply aggregate rules\nto aggregate data {
      shape: step
    }
  }
  gql-api.record-resolvers -> access-rule-store.record-rules: Get rules
  gql-api.aggregate-resolvers -> access-rule-store.aggregate-rules: Get rules
}
acg-services.gql-api.record-resolvers -> api-mocks.panorama-read-api-mock: Get data
acg-services.gql-api.aggregate-resolvers -> api-mocks.aggregate-read-api-mock: Get data

acg-services-2: Additional ACG Instances for federation testing {
  style: {
    stroke-dash: 3
  }
  1: "" {
    icon: ./icons/graphql/logo-pink.svg
    shape: image
  }
  2: "" {
    icon: ./icons/graphql/logo-pink.svg
    shape: image
  }
  3: "" {
    icon: ./icons/graphql/logo-pink.svg
    shape: image
  }
}
acg-services-2 -> api-mocks

federated-gql-api: GQL Federation Server {
  icon: ./icons/graphql/logo-pink.svg
}
federated-gql-api -> acg-services.gql-api: Federates provincial ACG API's
federated-gql-api -> acg-services-2: Federates provincial ACG API's

starvax-etl: Consumer Mock (optional) {
  icon: ./icons/general/server.svg
  icon.near: bottom-right

  explanation: |md
    Mock of a hypothetical Starvax ETL worker?
  |
}
starvax-etl -> federated-gql-api: Simulate batch job requests