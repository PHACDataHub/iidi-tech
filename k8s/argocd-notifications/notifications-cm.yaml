apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  service.github: |
    appID: $githubAppID
    installationID: $githubAppInstallationID
    privateKey: $githubAppPrivateKey

  # triggers from https://github.com/argoproj/argo-cd/blob/fff55f23f11f7bdeea77ba3d776c56b9db1f0bd9/notifications_catalog/install.yaml
  # templates original
  trigger.on-deployed: |
    - description: Application is synced and healthy. Triggered once per commit.
      oncePer: app.status.operationState?.syncResult?.revision
      send:
        - app-deployed
      when: app.status.operationState != nil and app.status.operationState.phase in ['Succeeded']
        and app.status.health.status == 'Healthy' and (!time.Parse(app.status.health.lastTransitionTime).Add(1
        * time.Minute).Before(time.Parse(app.status.operationState.finishedAt)) or time.Parse(app.status.health.lastTransitionTime).Before(time.Parse(app.status.operationState.startedAt)))
  template.app-deployed: |
    - message: |
      Application {{.app.metadata.name}} is synced and healthy.
    - github:
      status:
        state: success
        label: "argo-cd/{{.app.metadata.name}}"
        targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"

  trigger.on-health-degraded: |
    - description: Application has degraded
      oncePer: app.status.operationState?.syncResult?.revision
      send:
        - app-health-degraded
      when: app.status.health.status == 'Degraded'
  template.app-health-degraded: |
    - message: |
      Application {{.app.metadata.name}} is degraded.
    - github:
      status:
        state: failure
        label: "argo-cd/{{.app.metadata.name}}"
        targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
  
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      oncePer: app.status.operationState?.syncResult?.revision
      send:
        - app-sync-failed
      when: app.status.operationState != nil and app.status.operationState.phase in ['Error',Failed']
  template.app-sync-failed: |
    - message: |
      Application {{.app.metadata.name}} syncing has failed.
    - github:
      status:
        state: failure
        label: "argo-cd/{{.app.metadata.name}}"
        targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
  
  trigger.on-sync-running: |
    - description: Application is being synced
      oncePer: app.status.operationState?.syncResult?.revision
      send:
        - app-sync-running
      when: app.status.operationState != nil and app.status.operationState.phase in ['Running']
  template.app-sync-running: |
    - message: |
      Application {{.app.metadata.name}} is being synced.
    - github:
      status:
        state: in_progress
        label: "argo-cd/{{.app.metadata.name}}"
        targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"

  trigger.on-sync-status-unknown: |
    - description: Application status is 'Unknown'
      oncePer: app.status.operationState?.syncResult?.revision
      send:
        - app-sync-status-unknown
      when: app.status.sync.status == 'Unknown'
  template.app-sync-status-unknown: |
    - message: |
      Application {{.app.metadata.name}} is currently unknown.
    - github:
      status:
        state: failure
        label: "argo-cd/{{.app.metadata.name}}"
        targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
  
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      oncePer: app.status.operationState?.syncResult?.revision
      send:
        - app-sync-succeeded
      when: app.status.operationState != nil and app.status.operationState.phase in ['Succeeded']
  template.app-sync-succeeded: |
    - message: |
      Application {{.app.metadata.name}} has synced successfully.
    - github:
      status:
        state: success
        label: "argo-cd/{{.app.metadata.name}}"
        targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
