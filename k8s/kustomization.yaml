apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# IIDI Application for Cobra Tenant
# All resources deploy to cobra namespace managed by platform

# Set namespace for all resources
namespace: cobra

resources:
  # BC Services
  - bc-services/hapi-fhir-server/
  - bc-services/redis-server/
  - bc-services/patient-browser/
  - bc-services/aggregation-server/
  - bc-services/bc-transfer/

  # ON Services
  - on-services/hapi-fhir-server/
  - on-services/redis-server/
  - on-services/patient-browser/
  - on-services/aggregation-server/
  - on-services/on-transfer/

  # Federal Services
  - federal-services/federator/
  - federal-services/rshiny-dashboard/

  # Demo Services
  - demo-services/demo-portal/
  - demo-services/demo-transfer-dashboard/

# Common labels applied to all resources
labels:
  - pairs:
      tenant: cobra
      app.kubernetes.io/managed-by: argocd
      client-cost-centre: "280068"
      client-vanity-name: "IIDI"
      client-apm-id: ""
    includeTemplates: true
    includeSelectors: false

# Global annotations
commonAnnotations:
  app.kubernetes.io/version: "1.0.0"
  argocd.argoproj.io/sync-options: "ServerSideApply=true"

# Image transformations - update to use Artifact Registry
images:
  # Demo Portal
  - name: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/demo-portal
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/demo-portal
    newTag: iidi-cobra-89d53d5feb2a4857284847e047cb66ec24ab2e96-1754014870

  # HAPI FHIR Server - using new image
  - name: hapiproject/hapi
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/hapi-fhir-server
    newTag: iidi-cobra-bfaaeda934d8a8c2ade3bb5391d75420c550a8f9f4ac2fdb585cc78cf91d61a7-1754081774

  # IIDI Aggregator
  - name: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-aggregator
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-aggregator
    newTag: iidi-cobra-89d53d5feb2a4857284847e047cb66ec24ab2e96-1754014871

  # IIDI Dashboard (digest-based)
  - name: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-dashboard
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-dashboard
    digest: sha256:1d6e61770f6ba00712a9f1be5c6526b8628941f530cd4c321a022d8638a66d56

  # IIDI Demo Transfer Dashboard (digest-based)
  - name: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-demo-transfer-dashboard
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-demo-transfer-dashboard
    digest: sha256:23b5c1b76ab79f5ff8e84e3237d11421251d701643ed6f71bac4d6689a195a3a

  # IIDI Federator (digest-based)
  - name: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-federator
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-federator
    digest: sha256:02f49833bfee2a9b7bff9b5ff979ae5324972937d2fcf7937b39289c83d97204

  # Transfer Services (digest-based)
  - name: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-transfer-inbound
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-transfer-inbound
    digest: sha256:fc4bcd8c63c56bb9cd4dfc79e6e030c38fadcec20fbff1ab3044145766d3f795

  - name: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-transfer-outbound
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/iidi-transfer-outbound
    digest: sha256:645d3854615b8ab882cc7f9847e8994df4d682fafd41bffd9f385598f8ef6565

  # Patient Browser (digest-based)
  - name: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/patient-browser-iidi
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/patient-browser-iidi
    digest: sha256:f8628df85dd76c8f59c2d31b03b2f08dc0d258fc1825e1b7459591410656076a

  # Synthetic Data (digest-based)
  - name: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/synthetic-data
    newName: northamerica-northeast1-docker.pkg.dev/gcdm022b-cobra/iidi/synthetic-data
    digest: sha256:cd50afbbf33f1be554ce3aee71647f7868b885183bd0573935699aab7bf0b5d9

# Patches to apply - Strategic merge to consolidate configurations
patches:
  # Add service account to all deployments
  - target:
      kind: Deployment
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: not-important
      spec:
        template:
          spec:
            serviceAccountName: cobra-app-sa

  # Redis BC - Resources only
  - target:
      kind: Deployment
      name: redis-bc
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: redis-bc
      spec:
        template:
          spec:
            containers:
            - name: redis
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi

  # Redis ON - Resources only
  - target:
      kind: Deployment
      name: redis-on
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: redis-on
      spec:
        template:
          spec:
            containers:
            - name: redis
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi

  # HAPI FHIR BC - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: hapi-fhir-server-bc
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: hapi-fhir-server-bc
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: hapi-fhir-server-bc
              resources:
                requests:
                  cpu: 500m
                  memory: 2Gi
                limits:
                  cpu: 2000m
                  memory: 4Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: hapi-fhir-server-bc

  # HAPI FHIR ON - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: hapi-fhir-server-on
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: hapi-fhir-server-on
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: hapi-fhir-server-on
              resources:
                requests:
                  cpu: 500m
                  memory: 2Gi
                limits:
                  cpu: 2000m
                  memory: 4Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: hapi-fhir-server-on

  # Transfer services - Resources only (no gateway exposure or scaling)
  - target:
      kind: Deployment
      name: transfer-inbound-bc
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: transfer-inbound-bc
      spec:
        template:
          spec:
            containers:
            - name: transfer-inbound-bc
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi

  - target:
      kind: Deployment
      name: transfer-outbound-bc
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: transfer-outbound-bc
      spec:
        template:
          spec:
            containers:
            - name: transfer-outbound-bc
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi

  - target:
      kind: Deployment
      name: transfer-inbound-on
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: transfer-inbound-on
      spec:
        template:
          spec:
            containers:
            - name: transfer-inbound-on
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi

  - target:
      kind: Deployment
      name: transfer-outbound-on
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: transfer-outbound-on
      spec:
        template:
          spec:
            containers:
            - name: transfer-outbound-on
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi

  # Aggregation BC - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: aggregation-server-bc-deployment
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: aggregation-server-bc-deployment
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: aggregation-server-bc
              resources:
                requests:
                  cpu: 200m
                  memory: 512Mi
                limits:
                  cpu: 1000m
                  memory: 2Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: aggregation-server-bc

  # Aggregation ON - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: aggregation-server-on-deployment
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: aggregation-server-on-deployment
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: aggregation-server-on
              resources:
                requests:
                  cpu: 200m
                  memory: 512Mi
                limits:
                  cpu: 1000m
                  memory: 2Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: aggregation-server-on

  # Patient Browser BC - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: patient-browser-bc
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: patient-browser-bc
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: patient-browser-bc
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: patient-browser-bc

  # Patient Browser ON - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: patient-browser-on
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: patient-browser-on
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: patient-browser-on
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: patient-browser-on

  # Demo Portal - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: demo-portal
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: demo-portal
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: demo-portal
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: demo-portal

  # Demo Transfer Dashboard - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: demo-transfer-dashboard
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: demo-transfer-dashboard
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: demo-transfer-dashboard
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: demo-transfer-dashboard

  # Federator - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: federator-deployment
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: federator-deployment
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: federator
              resources:
                requests:
                  cpu: 200m
                  memory: 512Mi
                limits:
                  cpu: 1000m
                  memory: 2Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: federator

  # RShiny Dashboard - Combined: resources + gateway + scaling + topology
  - target:
      kind: Deployment
      name: rshiny-dashboard-deployment
    patch: |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: rshiny-dashboard-deployment
        namespace: cobra
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              expose-to-gateway: "true"
          spec:
            containers:
            - name: rshiny-dashboard
              resources:
                requests:
                  cpu: 200m
                  memory: 512Mi
                limits:
                  cpu: 1000m
                  memory: 2Gi
            topologySpreadConstraints:
              - maxSkew: 1
                topologyKey: topology.kubernetes.io/zone
                whenUnsatisfiable: ScheduleAnyway
                labelSelector:
                  matchLabels:
                    app: rshiny-dashboard
