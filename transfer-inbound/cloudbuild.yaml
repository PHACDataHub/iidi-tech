steps:
  - id: install
    name: 'node:22-alpine3.21'
    dir: transfer-inbound
    entrypoint: npm
    args: ['ci', '--no-optional']

  - id: check-types
    name: 'node:22-alpine3.21'
    dir: transfer-inbound
    entrypoint: npm
    args: ['run', 'typecheck']

  - id: run-tests
    name: 'node:22-alpine3.21'
    dir: transfer-inbound
    entrypoint: npm
    args: ['run', 'jest']

  - name: 'gcr.io/cloud-builders/docker'
    id: generate-image-name
    entrypoint: 'bash'
    dir: transfer-inbound
    args:
      - '-c'
      - |
        set -o errexit
        set -o pipefail
        set -o nounset

        service="iidi-transfer-inbound"

        # NOTE: $BRANCH_NAME etc aren't shell variables, they're a Cloudbuild substitution syntax.
        # Also important to note that they depend on the trigger source, and won't be set by default
        # if the build is triggered via the cli (`gcloud builds submit`) UNLESS the `--substitutions`
        # flag is used to set them manually
        branch="${$BRANCH_NAME:-unknown}" # cloudbuild's checkout behaviour makes every branch look like "master", so can't fallback on a git rev-parse 
        short_sha="${$COMMIT_SHA:-$(git rev-parse --short HEAD)}" # commit SHAs are at right inside cloudbuild, at least
        project_id="${$PROJECT_ID:-unknown}"
        echo "northamerica-northeast1-docker.pkg.dev/${project_id}/paradire/${service}:${branch}-${short_sha}-$(date +%s)" > /workspace/imagename

  - name: 'gcr.io/cloud-builders/docker'
    id: build-if-main
    entrypoint: 'bash'
    dir: transfer-inbound
    args:
      - '-c'
      - |
        set -o errexit
        set -o pipefail
        set -o nounset

        if [[ "$BRANCH_NAME" == "main" ]]; then
          image=$(cat /workspace/imagename)
          echo "Building Docker image: ${image}"
          docker build -t "${image}" -f ./Dockerfile .
        else
          echo "Skipping build: Not on 'main' branch"
          exit 0
        fi

  - name: 'gcr.io/cloud-builders/docker'
    id: push-if-main
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -o errexit
        set -o pipefail
        set -o nounset

        if [[ "$BRANCH_NAME" == "main" ]]; then
          image=$(cat /workspace/imagename)
          echo "Pushing Docker image: ${image}"
          docker push "${image}"
        else
          echo "Skipping push: Not on 'main' branch"
          exit 0
        fi

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
